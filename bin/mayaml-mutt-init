#!/usr/bin/env ruby
# frozen_string_literal: true

require "mayaml"
require "fileutils"

def puts_ussage_message
  puts <<-END_HELP
    Ussage: mayaml-mutt-init <path_to_yaml_file> [<destination_file>]
  END_HELP
end

def present_configs(configs)
  alternates = configs.delete(:alternates)
  puts "### Alternates: #{alternates}"
  configs.each do |name, config|
    puts "### Name: #{name} " + "=" * 50
    puts config
    puts
  end
end

def store_configs(configs, destination_file)
  alternates = configs.delete(:alternates)
  File.open(destination_file, "w") do |f|
    f.write("# vim: filetype=muttrc\n\n")
    configs.each do |_name, config|
      f.write(config)
    end
    f.write(alternates)
  end
end

def check_yaml_path(yaml_path)
  if yaml_path.nil?
    puts_ussage_message
    exit 1
  end
  return if File.exist? yaml_path
  puts "Could not find file: #{yaml_path}"
  exit 1
end

def main(args)
  yaml_path = args.shift
  destination_file = args.shift
  check_yaml_path yaml_path
  configs = Mayaml.accounts_from_file(yaml_path)
  destination_file.nil? ? present_configs(configs) : store_configs(configs, destination_file)
end

main ARGV
